--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.13
-- Dumped by pg_dump version 9.6.13

-- Started on 2019-05-31 02:05:25

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 1 (class 3079 OID 12387)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2216 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- TOC entry 501 (class 1247 OID 18542)
-- Name: retorno_entrevistado; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.retorno_entrevistado AS (
	codigo_entrevistado integer,
	codigo_segmento integer,
	codigo_curso integer,
	codigo_grau integer,
	codigo_campus integer
);


ALTER TYPE public.retorno_entrevistado OWNER TO postgres;

--
-- TOC entry 220 (class 1255 OID 18543)
-- Name: inserir_conceito(character varying); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.inserir_conceito(descricao_conceito character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $$declare
	codigo_conceito integer;
	valor_conceito integer;
begin
raise notice 'entrou em inserir conceito [%]', descricao_conceito;
if descricao_conceito = 'Ótimo' then
		valor_conceito := 5;
elsif descricao_conceito = 'Bom' then
		valor_conceito := 4;
elsif descricao_conceito = 'Satisfatório' then
		valor_conceito := 3;
elsif descricao_conceito = 'Ruim' then
		valor_conceito := 2;
	
elsif descricao_conceito = 'Péssimo' then
		valor_conceito := 1;
else
	valor_conceito := 0;
end if;
	insert into conceito (descricao, valor)
	values (descricao_conceito, valor_conceito)
	returning codigo into codigo_conceito;
return codigo_conceito;
end;
		$$;


ALTER FUNCTION public.inserir_conceito(descricao_conceito character varying) OWNER TO spaadmin;

--
-- TOC entry 215 (class 1255 OID 18544)
-- Name: inserir_entrevistado(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.inserir_entrevistado(nome_segmento character varying, nome_campus character varying, nome_curso character varying) RETURNS integer
    LANGUAGE plpgsql COST 150
    AS $$    DECLARE 

	codigo_segmento integer;
	codigo_curso integer;
	codigo_campus integer;
	codigo_entrevistado integer;
	codretorno integer;

    BEGIN
	
	/**Obtendo o codigo do segmento passdo ou inserindo um novo segmento*/
	SELECT codigo into codigo_segmento from segmento where segmento.descricao = nome_segmento;
	IF NOT FOUND THEN
		insert into segmento (descricao) values(nome_segmento);
		SELECT segmento.codigo into codigo_segmento from segmento order by 
		segmento.codigo desc limit 1;
	END IF;
	
	/**Obtendo o codigo do campus passdo ou inserindo um novo campus*/
	SELECT campus.codigo into codigo_campus from campus where campus.nome = nome_campus;
	IF NOT FOUND THEN
		insert into campus (nome) values(nome_campus);
		SELECT campus.codigo into codigo_campus from campus 
		order by campus.codigo desc limit 1;
	END IF;
	

	/*Inserindo curso se não estiver em branco*/
	IF nome_curso != '' then
		/**Obtendo o codigo do curso passdo ou inserindo um novo curso*/
		SELECT curso.codigo into codigo_curso from curso where curso.descricao = nome_curso;
		IF NOT FOUND THEN
			insert into curso (descricao) values(nome_curso);
			SELECT curso.codigo into codigo_curso from curso 
			order by curso.codigo desc limit 1;
			
		END IF;

		insert into entrevistado (codcampus, codsegmento, codcurso) 
		values(codigo_campus, codigo_segmento, codigo_curso);
		
		select entrevistado.codigo from entrevistado into codretorno 
		order by entrevistado.codigo desc limit 1;
	
	ELSE
		insert into entrevistado (codcampus, codsegmento) 
		values(codigo_campus, codigo_segmento);
		
		select entrevistado.codigo from entrevistado into codretorno
		order by entrevistado.codigo desc limit 1;

	END IF;
	
	
	return codretorno;
	

	
    END;
  $$;


ALTER FUNCTION public.inserir_entrevistado(nome_segmento character varying, nome_campus character varying, nome_curso character varying) OWNER TO spaadmin;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 186 (class 1259 OID 18545)
-- Name: assunto_pergunta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.assunto_pergunta (
    codassunto integer NOT NULL,
    codpergunta integer NOT NULL
);


ALTER TABLE public.assunto_pergunta OWNER TO spaadmin;

--
-- TOC entry 216 (class 1255 OID 18548)
-- Name: inserir_pergunta(character varying, character varying); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.inserir_pergunta(descricao_pergunta character varying, descricao_assunto character varying) RETURNS SETOF public.assunto_pergunta
    LANGUAGE plpgsql
    AS $$
	DECLARE
		codigo_assunto integer;
		codigo_pergunta integer;
		
		
	BEGIN
		if not exists(select 1 from assunto_pergunta where codpergunta = codigo_pergunta and codassunto = codigo_assunto) then
			SELECT codigo into codigo_assunto from assunto 
				where descricao = descricao_assunto;
			IF NOT FOUND THEN
				insert into assunto (descricao) values(descricao_assunto);
				select codigo into codigo_assunto from assunto 
				order by codigo desc limit 1;
			END IF;


			SELECT codigo into codigo_pergunta from pergunta 
				where descricao = descricao_pergunta;
			IF NOT FOUND THEN
				insert into pergunta (descricao) values(descricao_pergunta);
				select codigo into codigo_pergunta from pergunta 
				order by codigo desc limit 1;
			END IF;

			insert into assunto_pergunta (codpergunta, codassunto)
			values (codigo_pergunta, codigo_assunto);
		end if;
		return query  
		select codassunto, codpergunta from assunto_pergunta
		order by assunto_pergunta.codassunto desc limit 1;
		
		
		
	END;
$$;


ALTER FUNCTION public.inserir_pergunta(descricao_pergunta character varying, descricao_assunto character varying) OWNER TO spaadmin;

--
-- TOC entry 219 (class 1255 OID 18549)
-- Name: inserir_resposta(character varying, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserir_resposta(descricao_resposta character varying, codigo_assunto integer, codigo_pergunta integer, codigo_entrevistado integer) RETURNS void
    LANGUAGE plpgsql COST 150
    AS $$ declare
		codigo_conceito integer;

    BEGIN
	
	select codigo into codigo_conceito from conceito  where conceito.descricao = descricao_resposta; 
	if codigo_conceito is null then
		select inserir_conceito(descricao_resposta) into codigo_conceito;
	end if;
	insert into resposta (codconceito, codpergunta, codassunto, codentrevistado) 
	values(codigo_conceito, codigo_pergunta, codigo_assunto, codigo_entrevistado);
	
	RETURN;
    END;
  $$;


ALTER FUNCTION public.inserir_resposta(descricao_resposta character varying, codigo_assunto integer, codigo_pergunta integer, codigo_entrevistado integer) OWNER TO postgres;

--
-- TOC entry 217 (class 1255 OID 18550)
-- Name: pesquisar_pergunta(integer); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.pesquisar_pergunta(codigo_pergunta integer) RETURNS record
    LANGUAGE plpgsql
    AS $$
	declare
		retorno record;
	begin
		select pergunta.descricao, assunto_pergunta.descricao
		into retorno
		from pergunta inner join assunto_pergunta on (pergunta.codigoassunto = assunto_pergunta.codigo);

		return retorno;
	end;
$$;


ALTER FUNCTION public.pesquisar_pergunta(codigo_pergunta integer) OWNER TO spaadmin;

--
-- TOC entry 218 (class 1255 OID 18551)
-- Name: truncate_tables(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.truncate_tables(username character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    statements CURSOR FOR
        SELECT tablename FROM pg_tables
        WHERE tableowner = username AND schemaname = 'public';
BEGIN
    FOR stmt IN statements LOOP
        EXECUTE 'TRUNCATE TABLE ' || quote_ident(stmt.tablename) || ' CASCADE;';
    END LOOP;
END;
$$;


ALTER FUNCTION public.truncate_tables(username character varying) OWNER TO postgres;

--
-- TOC entry 187 (class 1259 OID 18552)
-- Name: assunto; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.assunto (
    codigo integer NOT NULL,
    descricao character varying(150) NOT NULL
);


ALTER TABLE public.assunto OWNER TO spaadmin;

--
-- TOC entry 188 (class 1259 OID 18555)
-- Name: assunto_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.assunto_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.assunto_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2217 (class 0 OID 0)
-- Dependencies: 188
-- Name: assunto_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.assunto_codigo_seq OWNED BY public.assunto.codigo;


--
-- TOC entry 189 (class 1259 OID 18557)
-- Name: campus; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.campus (
    nome character varying(150),
    codigo integer NOT NULL
);


ALTER TABLE public.campus OWNER TO spaadmin;

--
-- TOC entry 190 (class 1259 OID 18560)
-- Name: campus_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.campus_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campus_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2218 (class 0 OID 0)
-- Dependencies: 190
-- Name: campus_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.campus_codigo_seq OWNED BY public.campus.codigo;


--
-- TOC entry 191 (class 1259 OID 18562)
-- Name: conceito; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.conceito (
    codigo integer NOT NULL,
    descricao character varying(100),
    valor integer
);


ALTER TABLE public.conceito OWNER TO spaadmin;

--
-- TOC entry 192 (class 1259 OID 18565)
-- Name: conceito_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.conceito_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.conceito_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2219 (class 0 OID 0)
-- Dependencies: 192
-- Name: conceito_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.conceito_codigo_seq OWNED BY public.conceito.codigo;


--
-- TOC entry 193 (class 1259 OID 18567)
-- Name: curso; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.curso (
    codigo integer NOT NULL,
    descricao character varying(100)
);


ALTER TABLE public.curso OWNER TO spaadmin;

--
-- TOC entry 194 (class 1259 OID 18570)
-- Name: curso_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.curso_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.curso_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2220 (class 0 OID 0)
-- Dependencies: 194
-- Name: curso_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.curso_codigo_seq OWNED BY public.curso.codigo;


--
-- TOC entry 195 (class 1259 OID 18572)
-- Name: entrevistado; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.entrevistado (
    codigo integer NOT NULL,
    codsegmento integer,
    codcurso integer,
    codcampus integer
);


ALTER TABLE public.entrevistado OWNER TO spaadmin;

--
-- TOC entry 196 (class 1259 OID 18575)
-- Name: entrevistado_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.entrevistado_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entrevistado_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2221 (class 0 OID 0)
-- Dependencies: 196
-- Name: entrevistado_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.entrevistado_codigo_seq OWNED BY public.entrevistado.codigo;


--
-- TOC entry 197 (class 1259 OID 18577)
-- Name: pergunta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.pergunta (
    codigo integer NOT NULL,
    descricao character varying(150)
);


ALTER TABLE public.pergunta OWNER TO spaadmin;

--
-- TOC entry 198 (class 1259 OID 18580)
-- Name: pergunta_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.pergunta_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pergunta_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2222 (class 0 OID 0)
-- Dependencies: 198
-- Name: pergunta_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.pergunta_codigo_seq OWNED BY public.pergunta.codigo;


--
-- TOC entry 199 (class 1259 OID 18582)
-- Name: resposta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.resposta (
    codpergunta integer NOT NULL,
    codentrevistado integer NOT NULL,
    codassunto integer NOT NULL,
    codigo integer NOT NULL,
    codconceito integer NOT NULL
);


ALTER TABLE public.resposta OWNER TO spaadmin;

--
-- TOC entry 200 (class 1259 OID 18585)
-- Name: resposta_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.resposta_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resposta_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2223 (class 0 OID 0)
-- Dependencies: 200
-- Name: resposta_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.resposta_codigo_seq OWNED BY public.resposta.codigo;


--
-- TOC entry 201 (class 1259 OID 18587)
-- Name: segmento; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.segmento (
    codigo integer NOT NULL,
    descricao character varying(50)
);


ALTER TABLE public.segmento OWNER TO spaadmin;

--
-- TOC entry 202 (class 1259 OID 18590)
-- Name: segmento_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.segmento_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.segmento_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2224 (class 0 OID 0)
-- Dependencies: 202
-- Name: segmento_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.segmento_codigo_seq OWNED BY public.segmento.codigo;


--
-- TOC entry 2058 (class 2604 OID 18592)
-- Name: assunto codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto ALTER COLUMN codigo SET DEFAULT nextval('public.assunto_codigo_seq'::regclass);


--
-- TOC entry 2059 (class 2604 OID 18593)
-- Name: campus codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.campus ALTER COLUMN codigo SET DEFAULT nextval('public.campus_codigo_seq'::regclass);


--
-- TOC entry 2060 (class 2604 OID 18594)
-- Name: conceito codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.conceito ALTER COLUMN codigo SET DEFAULT nextval('public.conceito_codigo_seq'::regclass);


--
-- TOC entry 2061 (class 2604 OID 18595)
-- Name: curso codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.curso ALTER COLUMN codigo SET DEFAULT nextval('public.curso_codigo_seq'::regclass);


--
-- TOC entry 2062 (class 2604 OID 18596)
-- Name: entrevistado codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado ALTER COLUMN codigo SET DEFAULT nextval('public.entrevistado_codigo_seq'::regclass);


--
-- TOC entry 2063 (class 2604 OID 18597)
-- Name: pergunta codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.pergunta ALTER COLUMN codigo SET DEFAULT nextval('public.pergunta_codigo_seq'::regclass);


--
-- TOC entry 2064 (class 2604 OID 18598)
-- Name: resposta codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta ALTER COLUMN codigo SET DEFAULT nextval('public.resposta_codigo_seq'::regclass);


--
-- TOC entry 2065 (class 2604 OID 18599)
-- Name: segmento codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.segmento ALTER COLUMN codigo SET DEFAULT nextval('public.segmento_codigo_seq'::regclass);


--
-- TOC entry 2067 (class 2606 OID 18664)
-- Name: assunto_pergunta assunto_pergunta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto_pergunta
    ADD CONSTRAINT assunto_pergunta_pkey PRIMARY KEY (codassunto, codpergunta);


--
-- TOC entry 2069 (class 2606 OID 18611)
-- Name: assunto assunto_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto
    ADD CONSTRAINT assunto_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2071 (class 2606 OID 18637)
-- Name: campus campus_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.campus
    ADD CONSTRAINT campus_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2073 (class 2606 OID 18601)
-- Name: conceito conceito_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.conceito
    ADD CONSTRAINT conceito_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2075 (class 2606 OID 18635)
-- Name: curso curso_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT curso_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2077 (class 2606 OID 18633)
-- Name: entrevistado entrevistado_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT entrevistado_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2079 (class 2606 OID 18629)
-- Name: pergunta pergunta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.pergunta
    ADD CONSTRAINT pergunta_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2081 (class 2606 OID 18603)
-- Name: resposta resposta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT resposta_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2083 (class 2606 OID 18631)
-- Name: segmento segmento_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.segmento
    ADD CONSTRAINT segmento_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2084 (class 2606 OID 18638)
-- Name: assunto_pergunta assunto_pergunta_codassunto_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto_pergunta
    ADD CONSTRAINT assunto_pergunta_codassunto_fkey FOREIGN KEY (codassunto) REFERENCES public.assunto(codigo);


--
-- TOC entry 2085 (class 2606 OID 18643)
-- Name: assunto_pergunta assunto_pergunta_codpergunta_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto_pergunta
    ADD CONSTRAINT assunto_pergunta_codpergunta_fkey FOREIGN KEY (codpergunta) REFERENCES public.pergunta(codigo);


--
-- TOC entry 2088 (class 2606 OID 18658)
-- Name: entrevistado entrevistado_codcampus_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT entrevistado_codcampus_fkey FOREIGN KEY (codcampus) REFERENCES public.campus(codigo);


--
-- TOC entry 2087 (class 2606 OID 18653)
-- Name: entrevistado entrevistado_codcurso_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT entrevistado_codcurso_fkey FOREIGN KEY (codcurso) REFERENCES public.curso(codigo);


--
-- TOC entry 2086 (class 2606 OID 18648)
-- Name: entrevistado entrevistado_codsegmento_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT entrevistado_codsegmento_fkey FOREIGN KEY (codsegmento) REFERENCES public.segmento(codigo);


--
-- TOC entry 2089 (class 2606 OID 18604)
-- Name: resposta resposta_codconceito_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT resposta_codconceito_fkey FOREIGN KEY (codconceito) REFERENCES public.conceito(codigo);


--
-- TOC entry 2091 (class 2606 OID 18688)
-- Name: resposta resposta_codentrevistado_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT resposta_codentrevistado_fkey FOREIGN KEY (codentrevistado) REFERENCES public.entrevistado(codigo);


--
-- TOC entry 2090 (class 2606 OID 18683)
-- Name: resposta resposta_codpergunta_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT resposta_codpergunta_fkey FOREIGN KEY (codpergunta, codassunto) REFERENCES public.assunto_pergunta(codpergunta, codassunto);


--
-- TOC entry 1709 (class 826 OID 18609)
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TABLES  TO spaadmin;


-- Completed on 2019-05-31 02:05:25

--
-- PostgreSQL database dump complete
--

