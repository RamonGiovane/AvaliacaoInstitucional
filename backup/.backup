--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.13
-- Dumped by pg_dump version 9.6.13

-- Started on 2019-05-29 01:03:38

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 1 (class 3079 OID 12387)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2239 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- TOC entry 617 (class 1247 OID 16990)
-- Name: retorno_entrevistado; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.retorno_entrevistado AS (
	codigo_entrevistado integer,
	codigo_segmento integer,
	codigo_curso integer,
	codigo_grau integer,
	codigo_campus integer
);


ALTER TYPE public.retorno_entrevistado OWNER TO postgres;

--
-- TOC entry 218 (class 1255 OID 17222)
-- Name: inserir_entrevistado(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserir_entrevistado(nome_segmento character varying, nome_campus character varying, nome_grau character varying, nome_curso character varying) RETURNS integer
    LANGUAGE plpgsql COST 150
    AS $$    DECLARE 

	retorno retorno_entrevistado;
	codretorno integer;

    BEGIN
	
	/**Obtendo o codigo do segmento passdo ou inserindo um novo segmento*/
	SELECT codigo into retorno.codigo_segmento from segmento where segmento.descricao = nome_segmento;
	IF NOT FOUND THEN
		insert into segmento (descricao) values(nome_segmento);
		SELECT segmento.codigo into retorno.codigo_segmento from segmento order by 
		segmento.codigo desc limit 1;
	END IF;

	/*Inserindo curso e grau se houverem*/
	IF nome_grau != '' and nome_curso != '' then
		/**Obtendo o codigo do grau passdo ou inserindo um novo grau*/
		SELECT grau.codigo into retorno.codigo_grau from grau where grau.descricao = nome_grau;
		IF NOT FOUND THEN
			insert into grau (descricao) values(nome_grau);
			SELECT grau.codigo into retorno.codigo_grau from grau 
			order by grau.codigo desc limit 1;
		END IF;
		
		/**Obtendo o codigo do curso passdo ou inserindo um novo curso*/
		SELECT curso.codigo into retorno.codigo_curso from curso where curso.descricao = nome_curso and curso.codgrau = retorno.codigo_grau;
		IF NOT FOUND THEN
			insert into curso (descricao, codgrau) values(nome_curso, retorno.codigo_grau);
			SELECT curso.codigo into retorno.codigo_curso from curso 
			order by curso.codigo desc limit 1;
			
		END IF;
		
		
		/**Obtendo o codigo do campus passdo ou inserindo um novo campus*/
		SELECT campus.codigo into retorno.codigo_campus from campus where campus.nome = nome_campus;
		IF NOT FOUND THEN
			insert into campus (nome) values(nome_campus);
			SELECT campus.codigo into retorno.codigo_campus from campus 
			order by campus.codigo desc limit 1;
		END IF;
		
		/**Obtendo o codigo do campus passdo ou inserindo um novo campus*/
		if not exists (select 1 from grau_curso where grau_curso.codgrau = retorno.codigo_grau and
		grau_curso.codcurso = retorno.codigo_curso) then
		/*if not found then*/
			insert into grau_curso(codcurso, codgrau) 
				values (retorno.codigo_curso, retorno.codigo_grau);
		end if;
		
		insert into entrevistado (codcampus, codsegmento, codcurso, codgrau) 
		values(retorno.codigo_campus, retorno.codigo_segmento, retorno.codigo_curso, retorno.codigo_grau);
		
		select entrevistado.codigo from entrevistado into codretorno 
		order by entrevistado.codigo desc limit 1;
	
	ELSE
		insert into entrevistado (codcampus, codsegmento) 
		values(retorno.codigo_campus, retorno.codigo_segmento);
		
		select entrevistado.codigo from entrevistado into codretorno
		order by entrevistado.codigo desc limit 1;

	END IF;
	
	
	return codretorno;
	

	
    END;
  $$;


ALTER FUNCTION public.inserir_entrevistado(nome_segmento character varying, nome_campus character varying, nome_grau character varying, nome_curso character varying) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 196 (class 1259 OID 16849)
-- Name: assunto_pergunta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.assunto_pergunta (
    codassunto integer NOT NULL,
    codpergunta integer NOT NULL
);


ALTER TABLE public.assunto_pergunta OWNER TO spaadmin;

--
-- TOC entry 219 (class 1255 OID 17453)
-- Name: inserir_pergunta(character varying, character varying); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.inserir_pergunta(descricao_pergunta character varying, descricao_assunto character varying) RETURNS SETOF public.assunto_pergunta
    LANGUAGE plpgsql
    AS $$
	DECLARE
		codigo_assunto integer;
		codigo_pergunta integer;
		
		
	BEGIN

		SELECT codigo into codigo_assunto from assunto 
			where descricao = descricao_assunto;
		IF NOT FOUND THEN
			insert into assunto (descricao) values(descricao_assunto);
			select codigo into codigo_assunto from assunto 
			order by codigo desc limit 1;
		END IF;
		
				
		SELECT codigo into codigo_pergunta from pergunta 
			where descricao = descricao_pergunta;
		IF NOT FOUND THEN
			insert into pergunta (descricao) values(descricao_pergunta);
			select codigo into codigo_pergunta from pergunta 
			order by codigo desc limit 1;
		END IF;
		insert into assunto_pergunta (codpergunta, codassunto)
		values (codigo_pergunta, codigo_assunto);
		
		return query  
		select codassunto, codpergunta from assunto_pergunta
		order by assunto_pergunta.codassunto desc limit 1;
		
		
		
	END;
$$;


ALTER FUNCTION public.inserir_pergunta(descricao_pergunta character varying, descricao_assunto character varying) OWNER TO spaadmin;

--
-- TOC entry 204 (class 1255 OID 17614)
-- Name: inserir_resposta(character varying, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.inserir_resposta(descricao character varying, codigo_assunto integer, codigo_pergunta integer, codigo_entrevistado integer) RETURNS void
    LANGUAGE plpgsql COST 150
    AS $$

    BEGIN
	insert into resposta (descricao, codpergunta, codassunto, codentrevistado) 
	values(descricao, codigo_pergunta, codigo_assunto, codigo_entrevistado);
	
	RETURN;
    END;
  $$;


ALTER FUNCTION public.inserir_resposta(descricao character varying, codigo_assunto integer, codigo_pergunta integer, codigo_entrevistado integer) OWNER TO spaadmin;

--
-- TOC entry 217 (class 1255 OID 16748)
-- Name: pesquisar_pergunta(integer); Type: FUNCTION; Schema: public; Owner: spaadmin
--

CREATE FUNCTION public.pesquisar_pergunta(codigo_pergunta integer) RETURNS record
    LANGUAGE plpgsql
    AS $$
	declare
		retorno record;
	begin
		select pergunta.descricao, assunto_pergunta.descricao
		into retorno
		from pergunta inner join assunto_pergunta on (pergunta.codigoassunto = assunto_pergunta.codigo);

		return retorno;
	end;
$$;


ALTER FUNCTION public.pesquisar_pergunta(codigo_pergunta integer) OWNER TO spaadmin;

--
-- TOC entry 220 (class 1255 OID 17261)
-- Name: truncate_tables(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.truncate_tables(username character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    statements CURSOR FOR
        SELECT tablename FROM pg_tables
        WHERE tableowner = username AND schemaname = 'public';
BEGIN
    FOR stmt IN statements LOOP
        EXECUTE 'TRUNCATE TABLE ' || quote_ident(stmt.tablename) || ' CASCADE;';
    END LOOP;
END;
$$;


ALTER FUNCTION public.truncate_tables(username character varying) OWNER TO postgres;

--
-- TOC entry 195 (class 1259 OID 16843)
-- Name: assunto; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.assunto (
    codigo integer NOT NULL,
    descricao character varying(150) NOT NULL
);


ALTER TABLE public.assunto OWNER TO spaadmin;

--
-- TOC entry 194 (class 1259 OID 16841)
-- Name: assunto_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.assunto_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.assunto_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2240 (class 0 OID 0)
-- Dependencies: 194
-- Name: assunto_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.assunto_codigo_seq OWNED BY public.assunto.codigo;


--
-- TOC entry 198 (class 1259 OID 16909)
-- Name: campus; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.campus (
    nome character varying(150),
    codigo integer NOT NULL
);


ALTER TABLE public.campus OWNER TO spaadmin;

--
-- TOC entry 197 (class 1259 OID 16907)
-- Name: campus_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.campus_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campus_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2241 (class 0 OID 0)
-- Dependencies: 197
-- Name: campus_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.campus_codigo_seq OWNED BY public.campus.codigo;


--
-- TOC entry 185 (class 1259 OID 16754)
-- Name: curso; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.curso (
    codigo integer NOT NULL,
    descricao character varying(100),
    codgrau integer
);


ALTER TABLE public.curso OWNER TO spaadmin;

--
-- TOC entry 186 (class 1259 OID 16757)
-- Name: curso_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.curso_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.curso_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2242 (class 0 OID 0)
-- Dependencies: 186
-- Name: curso_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.curso_codigo_seq OWNED BY public.curso.codigo;


--
-- TOC entry 187 (class 1259 OID 16759)
-- Name: entrevistado; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.entrevistado (
    codigo integer NOT NULL,
    codsegmento integer,
    codcurso integer,
    codcampus integer,
    codgrau integer
);


ALTER TABLE public.entrevistado OWNER TO spaadmin;

--
-- TOC entry 188 (class 1259 OID 16762)
-- Name: entrevistado_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.entrevistado_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entrevistado_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2243 (class 0 OID 0)
-- Dependencies: 188
-- Name: entrevistado_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.entrevistado_codigo_seq OWNED BY public.entrevistado.codigo;


--
-- TOC entry 189 (class 1259 OID 16764)
-- Name: grau; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.grau (
    codigo integer NOT NULL,
    descricao character varying(100)
);


ALTER TABLE public.grau OWNER TO spaadmin;

--
-- TOC entry 190 (class 1259 OID 16767)
-- Name: grau_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.grau_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.grau_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2244 (class 0 OID 0)
-- Dependencies: 190
-- Name: grau_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.grau_codigo_seq OWNED BY public.grau.codigo;


--
-- TOC entry 201 (class 1259 OID 16960)
-- Name: grau_curso; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.grau_curso (
    codgrau integer NOT NULL,
    codcurso integer NOT NULL
);


ALTER TABLE public.grau_curso OWNER TO spaadmin;

--
-- TOC entry 200 (class 1259 OID 16947)
-- Name: pergunta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.pergunta (
    codigo integer NOT NULL,
    descricao character varying(150)
);


ALTER TABLE public.pergunta OWNER TO spaadmin;

--
-- TOC entry 199 (class 1259 OID 16945)
-- Name: pergunta_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.pergunta_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pergunta_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2245 (class 0 OID 0)
-- Dependencies: 199
-- Name: pergunta_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.pergunta_codigo_seq OWNED BY public.pergunta.codigo;


--
-- TOC entry 191 (class 1259 OID 16774)
-- Name: resposta; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.resposta (
    descricao character varying(50) NOT NULL,
    codpergunta integer NOT NULL,
    codentrevistado integer NOT NULL,
    codassunto integer NOT NULL,
    codigo integer NOT NULL
);


ALTER TABLE public.resposta OWNER TO spaadmin;

--
-- TOC entry 203 (class 1259 OID 17104)
-- Name: resposta_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.resposta_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.resposta_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2246 (class 0 OID 0)
-- Dependencies: 203
-- Name: resposta_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.resposta_codigo_seq OWNED BY public.resposta.codigo;


--
-- TOC entry 192 (class 1259 OID 16779)
-- Name: segmento; Type: TABLE; Schema: public; Owner: spaadmin
--

CREATE TABLE public.segmento (
    codigo integer NOT NULL,
    descricao character varying(50)
);


ALTER TABLE public.segmento OWNER TO spaadmin;

--
-- TOC entry 193 (class 1259 OID 16782)
-- Name: segmento_codigo_seq; Type: SEQUENCE; Schema: public; Owner: spaadmin
--

CREATE SEQUENCE public.segmento_codigo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.segmento_codigo_seq OWNER TO spaadmin;

--
-- TOC entry 2247 (class 0 OID 0)
-- Dependencies: 193
-- Name: segmento_codigo_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: spaadmin
--

ALTER SEQUENCE public.segmento_codigo_seq OWNED BY public.segmento.codigo;


--
-- TOC entry 2065 (class 2604 OID 16846)
-- Name: assunto codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto ALTER COLUMN codigo SET DEFAULT nextval('public.assunto_codigo_seq'::regclass);


--
-- TOC entry 2066 (class 2604 OID 16912)
-- Name: campus codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.campus ALTER COLUMN codigo SET DEFAULT nextval('public.campus_codigo_seq'::regclass);


--
-- TOC entry 2060 (class 2604 OID 16785)
-- Name: curso codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.curso ALTER COLUMN codigo SET DEFAULT nextval('public.curso_codigo_seq'::regclass);


--
-- TOC entry 2061 (class 2604 OID 16786)
-- Name: entrevistado codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado ALTER COLUMN codigo SET DEFAULT nextval('public.entrevistado_codigo_seq'::regclass);


--
-- TOC entry 2062 (class 2604 OID 16787)
-- Name: grau codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.grau ALTER COLUMN codigo SET DEFAULT nextval('public.grau_codigo_seq'::regclass);


--
-- TOC entry 2067 (class 2604 OID 16950)
-- Name: pergunta codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.pergunta ALTER COLUMN codigo SET DEFAULT nextval('public.pergunta_codigo_seq'::regclass);


--
-- TOC entry 2063 (class 2604 OID 17106)
-- Name: resposta codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta ALTER COLUMN codigo SET DEFAULT nextval('public.resposta_codigo_seq'::regclass);


--
-- TOC entry 2064 (class 2604 OID 16790)
-- Name: segmento codigo; Type: DEFAULT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.segmento ALTER COLUMN codigo SET DEFAULT nextval('public.segmento_codigo_seq'::regclass);


--
-- TOC entry 2224 (class 0 OID 16843)
-- Dependencies: 195
-- Data for Name: assunto; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.assunto (codigo, descricao) FROM stdin;
\.


--
-- TOC entry 2248 (class 0 OID 0)
-- Dependencies: 194
-- Name: assunto_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.assunto_codigo_seq', 498, true);


--
-- TOC entry 2225 (class 0 OID 16849)
-- Dependencies: 196
-- Data for Name: assunto_pergunta; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.assunto_pergunta (codassunto, codpergunta) FROM stdin;
\.


--
-- TOC entry 2227 (class 0 OID 16909)
-- Dependencies: 198
-- Data for Name: campus; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.campus (nome, codigo) FROM stdin;
\.


--
-- TOC entry 2249 (class 0 OID 0)
-- Dependencies: 197
-- Name: campus_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.campus_codigo_seq', 47, true);


--
-- TOC entry 2214 (class 0 OID 16754)
-- Dependencies: 185
-- Data for Name: curso; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.curso (codigo, descricao, codgrau) FROM stdin;
\.


--
-- TOC entry 2250 (class 0 OID 0)
-- Dependencies: 186
-- Name: curso_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.curso_codigo_seq', 45, true);


--
-- TOC entry 2216 (class 0 OID 16759)
-- Dependencies: 187
-- Data for Name: entrevistado; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.entrevistado (codigo, codsegmento, codcurso, codcampus, codgrau) FROM stdin;
\.


--
-- TOC entry 2251 (class 0 OID 0)
-- Dependencies: 188
-- Name: entrevistado_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.entrevistado_codigo_seq', 10517, true);


--
-- TOC entry 2218 (class 0 OID 16764)
-- Dependencies: 189
-- Data for Name: grau; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.grau (codigo, descricao) FROM stdin;
\.


--
-- TOC entry 2252 (class 0 OID 0)
-- Dependencies: 190
-- Name: grau_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.grau_codigo_seq', 27, true);


--
-- TOC entry 2230 (class 0 OID 16960)
-- Dependencies: 201
-- Data for Name: grau_curso; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.grau_curso (codgrau, codcurso) FROM stdin;
\.


--
-- TOC entry 2229 (class 0 OID 16947)
-- Dependencies: 200
-- Data for Name: pergunta; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.pergunta (codigo, descricao) FROM stdin;
\.


--
-- TOC entry 2253 (class 0 OID 0)
-- Dependencies: 199
-- Name: pergunta_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.pergunta_codigo_seq', 2371, true);


--
-- TOC entry 2220 (class 0 OID 16774)
-- Dependencies: 191
-- Data for Name: resposta; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.resposta (descricao, codpergunta, codentrevistado, codassunto, codigo) FROM stdin;
\.


--
-- TOC entry 2254 (class 0 OID 0)
-- Dependencies: 203
-- Name: resposta_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.resposta_codigo_seq', 1241200, true);


--
-- TOC entry 2221 (class 0 OID 16779)
-- Dependencies: 192
-- Data for Name: segmento; Type: TABLE DATA; Schema: public; Owner: spaadmin
--

COPY public.segmento (codigo, descricao) FROM stdin;
\.


--
-- TOC entry 2255 (class 0 OID 0)
-- Dependencies: 193
-- Name: segmento_codigo_seq; Type: SEQUENCE SET; Schema: public; Owner: spaadmin
--

SELECT pg_catalog.setval('public.segmento_codigo_seq', 62, true);


--
-- TOC entry 2081 (class 2606 OID 16853)
-- Name: assunto_pergunta assunto_pergunta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto_pergunta
    ADD CONSTRAINT assunto_pergunta_pkey PRIMARY KEY (codassunto, codpergunta);


--
-- TOC entry 2079 (class 2606 OID 16848)
-- Name: assunto assunto_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto
    ADD CONSTRAINT assunto_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2083 (class 2606 OID 16914)
-- Name: campus campus_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.campus
    ADD CONSTRAINT campus_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2087 (class 2606 OID 16964)
-- Name: grau_curso grau_curso_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.grau_curso
    ADD CONSTRAINT grau_curso_pkey PRIMARY KEY (codgrau, codcurso);


--
-- TOC entry 2085 (class 2606 OID 16952)
-- Name: pergunta pergunta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.pergunta
    ADD CONSTRAINT pergunta_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2069 (class 2606 OID 16796)
-- Name: curso pk_curso; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT pk_curso PRIMARY KEY (codigo);


--
-- TOC entry 2071 (class 2606 OID 16798)
-- Name: entrevistado pk_entrevistado; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT pk_entrevistado PRIMARY KEY (codigo);


--
-- TOC entry 2073 (class 2606 OID 16800)
-- Name: grau pk_grau; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.grau
    ADD CONSTRAINT pk_grau PRIMARY KEY (codigo);


--
-- TOC entry 2077 (class 2606 OID 16802)
-- Name: segmento pk_segmento; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.segmento
    ADD CONSTRAINT pk_segmento PRIMARY KEY (codigo);


--
-- TOC entry 2075 (class 2606 OID 17111)
-- Name: resposta resposta_pkey; Type: CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT resposta_pkey PRIMARY KEY (codigo);


--
-- TOC entry 2091 (class 2606 OID 16975)
-- Name: entrevistado entrevistado_codcurso_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT entrevistado_codcurso_fkey FOREIGN KEY (codcurso, codgrau) REFERENCES public.grau_curso(codcurso, codgrau);


--
-- TOC entry 2094 (class 2606 OID 16854)
-- Name: assunto_pergunta fk_assunto; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.assunto_pergunta
    ADD CONSTRAINT fk_assunto FOREIGN KEY (codassunto) REFERENCES public.assunto(codigo);


--
-- TOC entry 2090 (class 2606 OID 16916)
-- Name: entrevistado fk_campus_entrevistado; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT fk_campus_entrevistado FOREIGN KEY (codcampus) REFERENCES public.campus(codigo);


--
-- TOC entry 2093 (class 2606 OID 16873)
-- Name: resposta fk_resposta_assunto_pergunta; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT fk_resposta_assunto_pergunta FOREIGN KEY (codpergunta, codassunto) REFERENCES public.assunto_pergunta(codpergunta, codassunto);


--
-- TOC entry 2092 (class 2606 OID 16868)
-- Name: resposta fk_resposta_entrevistado; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.resposta
    ADD CONSTRAINT fk_resposta_entrevistado FOREIGN KEY (codentrevistado) REFERENCES public.entrevistado(codigo);


--
-- TOC entry 2088 (class 2606 OID 16815)
-- Name: curso fk_segmento_curso; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT fk_segmento_curso FOREIGN KEY (codgrau) REFERENCES public.grau(codigo);


--
-- TOC entry 2089 (class 2606 OID 16820)
-- Name: entrevistado fk_segmento_entrevistado; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.entrevistado
    ADD CONSTRAINT fk_segmento_entrevistado FOREIGN KEY (codsegmento) REFERENCES public.segmento(codigo);


--
-- TOC entry 2096 (class 2606 OID 16970)
-- Name: grau_curso grau_curso_codcurso_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.grau_curso
    ADD CONSTRAINT grau_curso_codcurso_fkey FOREIGN KEY (codcurso) REFERENCES public.curso(codigo);


--
-- TOC entry 2095 (class 2606 OID 16965)
-- Name: grau_curso grau_curso_codgrau_fkey; Type: FK CONSTRAINT; Schema: public; Owner: spaadmin
--

ALTER TABLE ONLY public.grau_curso
    ADD CONSTRAINT grau_curso_codgrau_fkey FOREIGN KEY (codgrau) REFERENCES public.grau(codigo);


-- Completed on 2019-05-29 01:03:40

--
-- PostgreSQL database dump complete
--

